This is a course project for the course "Database System and Information Management" taught by Lecturer Chen Peng at Sichuan University.

The aim of the course is to design and use databases to meet enterprise requirements appropriately. This course is a study of the underlying concepts and functions of relational database. It will emphasize the relational model theory, including relational structures, integrity constraints, data manipulation, the relational algebra, and normalization. Data modeling will be described and database application will be discussed. The bulk of the course will center on the SQL. Transaction management including database recovery and concurrency control will also be discussed.

Functional implementation description:
The application needs to run on port 80
Must realize the following functions (return page)
1、Database initialization: respond to the request submitted by the browser to complete the initialization of the database, use create table to establish the database of the various data tables, to ensure that there are no readers, books, books borrowed and returned data, that is, there is no book in this database file, a reader, there can not be any borrowed and returned data records (test, test the system will ensure that there is no data table in the database lib.db). any data table).
2、Add new book: respond to the FORM data submitted by the browser, complete the function of adding new books, and return to the HTML page as required.
3、Increase the number of books: respond to the FORM data submitted by the browser, complete the function of increasing the number of books, and return to the HTML page as required.
4、Delete/Decrease books: Respond to the submitted FORM data, complete the function of deleting/decreasing books, and return to the HTML page as required.
5、Modify book information: respond to the FORM data submitted by the browser, complete the function of modifying book information, and return to the HTML page as required.
6、Query books: Respond to the FORM data submitted by the browser, complete the function of querying books, and return to the HTML page as required.
7、Add readers: respond to the FORM data submitted by the browser, complete the function of adding readers, and return to the HTML page as required.
8、Delete readers: respond to the FORM data submitted by the browser, complete the function of deleting readers, and return to the HTML page as required.
9、Modify reader information: Respond to the FORM data submitted by the browser, complete the function of modifying reader information, and return to the HTML page as required.
10、Query readers: Respond to the FORM data submitted by the browser, complete the function of querying readers and return to the HTML page as required.
11、Viewing the unreturned book information of a reader: respond to the FORM data submitted by the browser and return to the HTML page as required.
12、Borrow books: respond to the FORM data submitted by the browser, complete the function of borrowing books and return to the HTML page as required.
13、Return: Respond to the FORM data submitted by the browser, complete the function of returning books, and return to the HTML page as required.
14、Overdue readers list: respond to the browser's request, complete the function of overdue readers list, and return to the HTML page as required.
FORM Parameters and Return Format
　　The FORM data submitted in response to the above 14 functions are all in POST mode.
　　After you have configured and run the "Library Empty Project" correctly, you can open the __index.htm file provided by your teacher by going to: http://127.0.0.1 (or double-clicking it directly) through your browser.
　　You can view the FORM parameter descriptions and return requirements for each function by selecting the different functions in the test item drop-down box on the top left side of the page. Caution:
FORM parameter names are marked in red, such as: book number [bID].
Marked with a five-pointed star parameter is required, such as: ★ book number [bID].
parameter description below is the operation of the return of the HTML page formatting instructions, especially the bold red part of which must be generated in strict accordance with the format of the part!
test debugging
__index.htm page can also be used to test your implementation of the above 14 page function. (Then test and debug through your browser using: " http://127.0.0.1/__index.htm ")
